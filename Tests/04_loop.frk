# Creates an incremental array (1,2,...) and then reads its content

# assignments
ASSGN LIMIT   31   # 0x1F, array length
ASSGN CURRENT 0x01 # stores current value to add to array
ASSGN ARRAY   0x10 # start of array

# if LIMIT is 0, do nothing
ZEROW
CMPWP IMM LIMIT
GTIFZ END

# fill initialization
CPYPW IMM 1
CPYWP CURRENT   # CURRENT = 1 
CPYPW IMM ARRAY
CPYWA           # ADDR = ARRAY

# array fill loop (ADDR -> ARRAY[i])
LABEL FILL
CPYPW IMM LIMIT   
CMPWP FLR CURRENT
GTIFN READ        # if CURRENT > LIMIT: goto READ
CPYPW FLR CURRENT 
CPYWR             # else ARRAY[i] = CURRENT
INCRW
CPYWP CURRENT     # ++CURRENT
INCRA             # ADDR -> ARRAY[i+1]
GOTOI FILL

# read initialization
LABEL READ
CPYPW IMM ARRAY
CPYWA           # ADDR = ARRAY

# read loop (ADDR -> ARRAY[i])
LABEL READLOOP
CPYRW           # WREG = ARRAY[i]
CMPWP IMM LIMIT 
GTIFZ END       # if WREG = ARRAY[LIMIT]: goto END
INCRA           # ADDR -> ARRAY[i+1]
GOTOI READLOOP

LABEL END
LOOPF
